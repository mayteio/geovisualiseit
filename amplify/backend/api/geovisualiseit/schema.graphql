type User
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["Admin"] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!

  # visualisations: [Visualisation] @connection(name: "UserVisualisations")
}

type Visualisation
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["Admin"] }
      # { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  # user: Profile @connection(name: "UserVisualisations")
  config: Config @connection(name: "VisualisationConfig")
  datasets: [Dataset] @connection(name: "VisualisationDatasets")
  image: S3Object

  # future features
  # password: String
  # mapState: MapState
  # location: Location
  # comments: [Comment] @connection(name: "VisualisationComments")
  # tags: [VisualisationTags] @connection(name: "VisualisationTags")
}

type Config
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["Admin"] }
      # { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  visualisation: Visualisation @connection(name: "VisualisationConfig")
  file: S3Object!
}

# think more about this - datasets are public I guess so they should get public access if coming via another model
# https://stackoverflow.com/questions/59380694/in-an-appsync-graphql-transform-can-i-set-an-auth-rule-authstrategy-based-on-a
# https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html
# https://hackernoon.com/graphql-authorization-with-multiple-data-sources-using-aws-appsync-dfae2e350bf2

type Dataset
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["Admin"] }
      # { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  visualisation: Visualisation @connection(name: "VisualisationDatasets")
  title: String!
  file: S3Object!
}

type S3Object {
  bucket: String
  key: String
  region: String
}

# Unsure how to do many to many with tags
# See many-to-many: https://aws-amplify.github.io/docs/cli-toolchain/graphql#usage-2

# type Tag
# @model
# @auth(rules: [
#   { allow: owner, operations: [create] }
#   { allow: groups, groups: ["Admin"] }
#   { allow: public, operations: [read] }
# ])
# {
#   id: ID!
#   title: String!
# }

# type Location
#   @model
#   @auth(
#     rules: [
#       { allow: owner, operations: [create] }
#       { allow: groups, groups: ["Admin"] }
#       # { allow: public, operations: [read] }
#     ]
#   ) {
#   name: String!
#   country: String!
#   latlng: LatLng
# }

# type LatLng {
#   latitude: Float!
#   longitude: Float!
# }

# type MapState {
#   latitude: Float!
#   longitude: Float!
#   zoom: Float!
#   bearing: Float
#   pitch: Float
# }
